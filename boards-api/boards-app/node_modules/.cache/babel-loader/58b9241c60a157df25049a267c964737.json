{"ast":null,"code":"var _jsxFileName = \"/Users/Ivan/Desktop/test4/boards-api/boards-app/src/components/Board.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport update from \"immutability-helper\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Board extends Component {\n  constructor(props) {\n    super(props);\n\n    this.newColumn = (e, board_id) => {\n      if (e.key === \"Enter\" && !(e.target.value === \"\")) {\n        axios.post(`/api/v1/boards/${board_id}/board_columns`, {\n          column: {\n            title: e.target.value\n          }\n        }).then(res => {\n          const columns = update(this.state.columns, {\n            $splice: [[0, 0, res.data]]\n          });\n          this.setState({\n            columns: columns,\n            inputValue: \"\"\n          });\n        }).catch(error => console.log(error));\n      }\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        inputValue: e.target.value\n      });\n    };\n\n    this.removeColumn = (board_id, id) => {\n      axios.delete(`/api/v1/boards/${board_id}/board_columns/${id}`).then(res => {\n        const columnIndex = this.state.columns.findIndex(x => x.id === id);\n        const columns = update(this.state.columns, {\n          $splice: [[columnIndex, 1]]\n        });\n        this.setState({\n          columns: columns\n        });\n      }).catch(error => console.log(error));\n    };\n\n    this.state = {\n      columns: [],\n      cards: []\n    };\n  }\n\n  loadColumns() {\n    axios.get(`/api/v1/boards/6/board_columns`).then(res => {\n      this.setState({\n        columns: res.data\n      });\n    });\n    axios.get(`/api/v1/boards/6/cards`).then(res => {\n      this.setState({\n        cards: res.data\n      });\n    }).catch(error => console.log(error));\n  }\n\n  componentDidMount() {\n    this.loadColumns();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"topHeading\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Boards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrapItems\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"listItems\",\n            children: this.state.columns.map(column => {\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"item\",\n                column: column,\n                children: [/*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/boards\",\n                  children: column.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"itemDisplay\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"removeItemButton\",\n                  onClick: e => this.removeColumn(6, 9),\n                  children: \"x\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 25\n                }, this)]\n              }, column.board_id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 25\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"newColumn\",\n            type: \"text\",\n            placeholder: \"Input a New Board and Press Enter\",\n            maxLength: \"75\",\n            onKeyPress: this.newColumn(6),\n            value: this.state.inputValue,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"listItems\",\n            children: this.state.cards.map(card => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item\",\n                card: card,\n                children: [/*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/boards\",\n                  children: card.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"itemDisplay\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 25\n                }, this)]\n              }, card.board_column_id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 25\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/boards\",\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/Ivan/Desktop/test4/boards-api/boards-app/src/components/Board.js"],"names":["React","Component","axios","update","Link","Board","constructor","props","newColumn","e","board_id","key","target","value","post","column","title","then","res","columns","state","$splice","data","setState","inputValue","catch","error","console","log","handleChange","removeColumn","id","delete","columnIndex","findIndex","x","cards","loadColumns","get","componentDidMount","render","map","card","board_column_id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport update from \"immutability-helper\";\nimport { Link } from \"react-router-dom\";\n\nclass Board extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          columns: [],\n          cards: []\n        };\n    }\n\n    loadColumns() {\n        axios\n          .get(`/api/v1/boards/6/board_columns`)\n          .then((res) => {\n            this.setState({ columns: res.data });\n          })\n        axios\n          .get(`/api/v1/boards/6/cards`)\n          .then((res) => {\n            this.setState({ cards: res.data });\n          })\n        .catch((error) => console.log(error));\n    }\n\n    newColumn = (e, board_id) => {\n        if (e.key === \"Enter\" && !(e.target.value === \"\")) {\n            axios\n              .post(`/api/v1/boards/${board_id}/board_columns`, { column: { title: e.target.value } })\n              .then((res) => {\n                const columns = update(this.state.columns, {\n                  $splice: [[0, 0, res.data]],\n                });\n        \n                this.setState({\n                    columns: columns,\n                  inputValue: \"\",\n                });\n              })\n              .catch((error) => console.log(error));\n            }\n    };\n\n    handleChange = (e) => {\n\t\tthis.setState({inputValue: e.target.value});\n\t  }\n\n\n      removeColumn = (board_id, id) => {\n        axios \n            .delete(`/api/v1/boards/${board_id}/board_columns/${id}`)\n            .then((res) => {\n                const columnIndex = this.state.columns.findIndex((x) => x.id === id);\n                const columns = update(this.state.columns, {\n                  $splice: [[columnIndex, 1]],\n                });\n                this.setState({\n                    columns: columns,\n                });\n              })\n              .catch((error) => console.log(error));\n    };\n\n\n    componentDidMount() {\n        this.loadColumns();\n    }\n\n    render() {\n        return (\n            <div className=\"mainContainer\">\n            <div className=\"topHeading\">\n              <h1>Boards</h1>\n              <div className=\"wrapItems\">\n                <div className=\"listItems\">\n                    {this.state.columns.map((column) => {\n                    return (\n                        <li className=\"item\" column={column} key={column.board_id}>\n                        <Link to=\"/boards\">{column.title}</Link>\n                        <label className=\"itemDisplay\"></label>\n                        <span className=\"removeItemButton\" onClick={(e) => this.removeColumn(6,9)}>\n                            x\n                        </span>\n                        </li>\n                    );\n                    })}\n                </div>\n                <input\n                    className=\"newColumn\"\n                    type=\"text\"\n                    placeholder=\"Input a New Board and Press Enter\"\n                    maxLength=\"75\"\n                    onKeyPress={this.newColumn(6)}\n                    value={this.state.inputValue}\n                    onChange={this.handleChange}\n                />\n                <div className=\"listItems\">\n                    {this.state.cards.map((card) => {\n                    return (\n                        <div className=\"item\" card={card} key={card.board_column_id}>\n                        <Link to=\"/boards\">{card.title}</Link>\n                        <label className=\"itemDisplay\"></label>\n                        </div>\n                    );\n                    })}\n                </div>\n                </div>\n              <Link to=\"/boards\">Back</Link>\n            </div>\n          </div>\n        );\n    }\n\n\n}\n\n\n\n\n\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}