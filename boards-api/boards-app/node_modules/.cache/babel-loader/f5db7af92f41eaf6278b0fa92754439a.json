{"ast":null,"code":"var _jsxFileName = \"/Users/Ivan/Desktop/test4/boards-api/boards-app/src/components/Column.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport update from \"immutability-helper\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\nimport EdiText from 'react-editext';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport Sortable from 'sortablejs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Board extends Component {\n  constructor(props) {\n    super(props);\n\n    this.reloadColumns = () => {\n      this.setState({\n        columns: [],\n        cards: [],\n        board: null\n      });\n      this.loadColumns();\n    };\n\n    this.newColumn = (e, id) => {\n      if (e.key === \"Enter\" && !(e.target.value === \"\")) {\n        axios.post(`/api/v1/board_columns`, {\n          board_column: {\n            title: e.target.value,\n            board_id: id\n          }\n        }).then(res => {\n          const columns = update(this.state.columns, {\n            $push: [[res.data]]\n          });\n          this.setState({\n            columns: columns,\n            inputValue: \"\"\n          });\n          this.reloadColumns();\n        }).catch(error => console.log(error));\n      }\n    };\n\n    this.newCard = (e, id) => {\n      if (e.key === \"Enter\" && !(e.target.value === \"\")) {\n        axios.post(`/api/v1/cards`, {\n          cards: {\n            title: e.target.value,\n            board_column_id: id\n          }\n        }).then(res => {\n          const cards = update(this.state.cards, {\n            $push: [[0, 0, res.data]]\n          });\n          this.setState({\n            cards: cards,\n            inputValue: \"\"\n          });\n          this.reloadColumns();\n        }).catch(error => console.log(error));\n      }\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        inputValue: e.target.value\n      });\n    };\n\n    this.removeColumn = id => {\n      axios.delete(`/api/v1/board_columns/${id}`).then(res => {\n        const columnIndex = this.state.columns.findIndex(x => x.id === id);\n        const columns = update(this.state.columns, {\n          $splice: [[columnIndex, 1]]\n        });\n        this.setState({\n          columns: columns\n        }); // this.reloadColumns();\n      }).catch(error => console.log(error));\n    };\n\n    this.removeCard = id => {\n      axios.delete(`/api/v1/cards/${id}`).then(res => {\n        const cardIndex = this.state.cards.findIndex(x => x.id === id);\n        const cards = update(this.state.cards, {\n          $splice: [[cardIndex, 1]]\n        });\n        this.setState({\n          cards: cards\n        });\n      }).catch(error => console.log(error));\n    };\n\n    this.modifyCard = (value, id) => {\n      axios.put(`/api/v1/cards/${id}`, {\n        cards: {\n          title: value\n        }\n      }).then(res => {\n        const cardIndex = this.state.cards.findIndex(x => x.id === res.data.id);\n        const cards = update(this.state.cards, {\n          [cardIndex]: {\n            $set: res.data\n          }\n        });\n        this.setState({\n          cards: cards\n        });\n      }).catch(error => console.log(error));\n    };\n\n    this.state = {\n      columns: [],\n      cards: [],\n      board: null\n    };\n  }\n\n  loadColumns() {\n    const link = this.props.match.params.link;\n    axios.get(`/api/v1/board/${link}`).then(res => {\n      this.setState({\n        board: res.data\n      });\n      axios.get(`/api/v1/board_columns`, {\n        params: {\n          board_id: res.data.id\n        }\n      }).then(res => {\n        this.setState({\n          columns: res.data\n        });\n        res.data.forEach(column => {\n          axios.get(`/api/v1/cards`, {\n            params: {\n              board_column_id: column.id\n            }\n          }).then(res => {\n            const newCards = this.state.cards.concat(res.data);\n            this.setState({\n              cards: newCards\n            });\n          });\n        });\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.loadColumns();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(DragDropContext, {\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"taskContainer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"board\",\n          children: this.state.columns.map(column => {\n            const Cards = this.state.cards.filter(card => card.board_column_id === column.id);\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                class: \"board-col\",\n                children: Cards.sort((a, b) => a.position - b.position).map(card => {\n                  return /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: /*#__PURE__*/_jsxDEV(\"li\", {\n                      class: \"board-col-item\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: card.title\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 158,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 157,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this)\n            }, void 0, false);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/boards\",\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/Ivan/Desktop/test4/boards-api/boards-app/src/components/Column.js"],"names":["React","Component","axios","update","Link","useParams","withRouter","EdiText","DragDropContext","Droppable","Draggable","Sortable","Board","constructor","props","reloadColumns","setState","columns","cards","board","loadColumns","newColumn","e","id","key","target","value","post","board_column","title","board_id","then","res","state","$push","data","inputValue","catch","error","console","log","newCard","board_column_id","handleChange","removeColumn","delete","columnIndex","findIndex","x","$splice","removeCard","cardIndex","modifyCard","put","$set","link","match","params","get","forEach","column","newCards","concat","componentDidMount","render","map","Cards","filter","card","sort","a","b","position"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,IAAT,EAAeC,SAAf,QAA+B,kBAA/B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,eAAT,EAA0BC,SAA1B,EAAqCC,SAArC,QAAsD,qBAAtD;AACA,OAAOC,QAAP,MAAqB,YAArB;;;;AAEA,MAAMC,KAAN,SAAoBX,SAApB,CAA8B;AAC1BY,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SA+BnBC,aA/BmB,GA+BH,MAAM;AAClB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE,EAAX;AAAeC,QAAAA,KAAK,EAAE,EAAtB;AAA0BC,QAAAA,KAAK,EAAE;AAAjC,OAAd;AACA,WAAKC,WAAL;AACD,KAlCgB;;AAAA,SAoCnBC,SApCmB,GAoCP,CAACC,CAAD,EAAIC,EAAJ,KAAW;AACnB,UAAID,CAAC,CAACE,GAAF,KAAU,OAAV,IAAqB,EAAEF,CAAC,CAACG,MAAF,CAASC,KAAT,KAAmB,EAArB,CAAzB,EAAmD;AAC/CxB,QAAAA,KAAK,CACFyB,IADH,CACS,uBADT,EACiC;AAAEC,UAAAA,YAAY,EAAE;AAAEC,YAAAA,KAAK,EAAEP,CAAC,CAACG,MAAF,CAASC,KAAlB;AAAyBI,YAAAA,QAAQ,EAAEP;AAAnC;AAAhB,SADjC,EAEGQ,IAFH,CAESC,GAAD,IAAS;AACb,gBAAMf,OAAO,GAAGd,MAAM,CAAC,KAAK8B,KAAL,CAAWhB,OAAZ,EAAqB;AACzCiB,YAAAA,KAAK,EAAE,CAAC,CAACF,GAAG,CAACG,IAAL,CAAD;AADkC,WAArB,CAAtB;AAGA,eAAKnB,QAAL,CAAc;AACZC,YAAAA,OAAO,EAAEA,OADG;AAEZmB,YAAAA,UAAU,EAAE;AAFA,WAAd;AAIA,eAAKrB,aAAL;AACD,SAXH,EAYGsB,KAZH,CAYUC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAZpB;AAaC;AACR,KApDkB;;AAAA,SAsDnBG,OAtDmB,GAsDT,CAACnB,CAAD,EAAIC,EAAJ,KAAW;AACjB,UAAID,CAAC,CAACE,GAAF,KAAU,OAAV,IAAqB,EAAEF,CAAC,CAACG,MAAF,CAASC,KAAT,KAAmB,EAArB,CAAzB,EAAmD;AAC/CxB,QAAAA,KAAK,CACFyB,IADH,CACS,eADT,EACyB;AAAET,UAAAA,KAAK,EAAE;AAAEW,YAAAA,KAAK,EAAEP,CAAC,CAACG,MAAF,CAASC,KAAlB;AAAyBgB,YAAAA,eAAe,EAAEnB;AAA1C;AAAT,SADzB,EAEGQ,IAFH,CAESC,GAAD,IAAS;AACb,gBAAMd,KAAK,GAAGf,MAAM,CAAC,KAAK8B,KAAL,CAAWf,KAAZ,EAAmB;AACrCgB,YAAAA,KAAK,EAAE,CAAC,CAAC,CAAD,EAAG,CAAH,EAAMF,GAAG,CAACG,IAAV,CAAD;AAD8B,WAAnB,CAApB;AAIA,eAAKnB,QAAL,CAAc;AACZE,YAAAA,KAAK,EAAEA,KADK;AAEZkB,YAAAA,UAAU,EAAE;AAFA,WAAd;AAIA,eAAKrB,aAAL;AACD,SAZH,EAaGsB,KAbH,CAaUC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAbpB;AAcC;AACR,KAvEkB;;AAAA,SAyEnBK,YAzEmB,GAyEHrB,CAAD,IAAO;AACxB,WAAKN,QAAL,CAAc;AAACoB,QAAAA,UAAU,EAAEd,CAAC,CAACG,MAAF,CAASC;AAAtB,OAAd;AACE,KA3EmB;;AAAA,SA8EnBkB,YA9EmB,GA8EFrB,EAAF,IAAU;AACrBrB,MAAAA,KAAK,CACA2C,MADL,CACa,yBAAwBtB,EAAG,EADxC,EAEKQ,IAFL,CAEWC,GAAD,IAAS;AACX,cAAMc,WAAW,GAAG,KAAKb,KAAL,CAAWhB,OAAX,CAAmB8B,SAAnB,CAA8BC,CAAD,IAAOA,CAAC,CAACzB,EAAF,KAASA,EAA7C,CAApB;AACA,cAAMN,OAAO,GAAGd,MAAM,CAAC,KAAK8B,KAAL,CAAWhB,OAAZ,EAAqB;AACzCgC,UAAAA,OAAO,EAAE,CAAC,CAACH,WAAD,EAAc,CAAd,CAAD;AADgC,SAArB,CAAtB;AAGA,aAAK9B,QAAL,CAAc;AACVC,UAAAA,OAAO,EAAEA;AADC,SAAd,EALW,CAQX;AAED,OAZP,EAaOoB,KAbP,CAacC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAbxB;AAcH,KA7FkB;;AAAA,SA+FnBY,UA/FmB,GA+FJ3B,EAAF,IAAU;AACnBrB,MAAAA,KAAK,CACA2C,MADL,CACa,iBAAgBtB,EAAG,EADhC,EAEKQ,IAFL,CAEWC,GAAD,IAAS;AACb,cAAMmB,SAAS,GAAG,KAAKlB,KAAL,CAAWf,KAAX,CAAiB6B,SAAjB,CAA4BC,CAAD,IAAOA,CAAC,CAACzB,EAAF,KAASA,EAA3C,CAAlB;AACA,cAAML,KAAK,GAAGf,MAAM,CAAC,KAAK8B,KAAL,CAAWf,KAAZ,EAAmB;AACrC+B,UAAAA,OAAO,EAAE,CAAC,CAACE,SAAD,EAAY,CAAZ,CAAD;AAD4B,SAAnB,CAApB;AAGA,aAAKnC,QAAL,CAAc;AACZE,UAAAA,KAAK,EAAEA;AADK,SAAd;AAGD,OAVL,EAWKmB,KAXL,CAWYC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAXtB;AAYH,KA5GkB;;AAAA,SAoHnBc,UApHmB,GAoHP,CAAC1B,KAAD,EAAQH,EAAR,KAAe;AACrBrB,MAAAA,KAAK,CACAmD,GADL,CACU,iBAAgB9B,EAAG,EAD7B,EACgC;AAAEL,QAAAA,KAAK,EAAE;AAAEW,UAAAA,KAAK,EAAEH;AAAT;AAAT,OADhC,EAEKK,IAFL,CAEWC,GAAD,IAAS;AACb,cAAMmB,SAAS,GAAG,KAAKlB,KAAL,CAAWf,KAAX,CAAiB6B,SAAjB,CACfC,CAAD,IAAOA,CAAC,CAACzB,EAAF,KAASS,GAAG,CAACG,IAAJ,CAASZ,EADT,CAAlB;AAGA,cAAML,KAAK,GAAGf,MAAM,CAAC,KAAK8B,KAAL,CAAWf,KAAZ,EAAmB;AACrC,WAACiC,SAAD,GAAa;AAAEG,YAAAA,IAAI,EAAEtB,GAAG,CAACG;AAAZ;AADwB,SAAnB,CAApB;AAGA,aAAKnB,QAAL,CAAc;AACZE,UAAAA,KAAK,EAAEA;AADK,SAAd;AAGD,OAZL,EAaKmB,KAbL,CAaYC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAbtB;AAcP,KAnIoB;;AAEf,SAAKL,KAAL,GAAa;AACXhB,MAAAA,OAAO,EAAE,EADE;AAEXC,MAAAA,KAAK,EAAE,EAFI;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKH;;AAEDC,EAAAA,WAAW,GAAG;AACV,UAAMmC,IAAI,GAAG,KAAKzC,KAAL,CAAW0C,KAAX,CAAiBC,MAAjB,CAAwBF,IAArC;AACArD,IAAAA,KAAK,CACFwD,GADH,CACQ,iBAAgBH,IAAK,EAD7B,EAEGxB,IAFH,CAESC,GAAD,IAAS;AACb,WAAKhB,QAAL,CAAc;AAAEG,QAAAA,KAAK,EAAEa,GAAG,CAACG;AAAb,OAAd;AACAjC,MAAAA,KAAK,CACJwD,GADD,CACM,uBADN,EAC8B;AAAED,QAAAA,MAAM,EAAE;AAAC3B,UAAAA,QAAQ,EAAEE,GAAG,CAACG,IAAJ,CAASZ;AAApB;AAAV,OAD9B,EAECQ,IAFD,CAEOC,GAAD,IAAS;AACb,aAAKhB,QAAL,CAAc;AAAEC,UAAAA,OAAO,EAAEe,GAAG,CAACG;AAAf,SAAd;AACAH,QAAAA,GAAG,CAACG,IAAJ,CAASwB,OAAT,CAAkBC,MAAD,IAAY;AAC3B1D,UAAAA,KAAK,CACJwD,GADD,CACM,eADN,EACsB;AAAED,YAAAA,MAAM,EAAE;AAACf,cAAAA,eAAe,EAAEkB,MAAM,CAACrC;AAAzB;AAAV,WADtB,EAECQ,IAFD,CAEOC,GAAD,IAAS;AACX,kBAAM6B,QAAQ,GAAG,KAAK5B,KAAL,CAAWf,KAAX,CAAiB4C,MAAjB,CAAwB9B,GAAG,CAACG,IAA5B,CAAjB;AACA,iBAAKnB,QAAL,CAAc;AAACE,cAAAA,KAAK,EAAE2C;AAAR,aAAd;AACD,WALH;AAMC,SAPH;AAQC,OAZH;AAaC,KAjBL;AAkBH;;AAkFDE,EAAAA,iBAAiB,GAAG;AAChB,SAAK3C,WAAL;AACH;;AAoBD4C,EAAAA,MAAM,GAAG;AACL,wBACE,QAAC,eAAD;AAAA,6BACA;AAAA,gCACA;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBADA,eAGE;AAAK,UAAA,KAAK,EAAC,OAAX;AAAA,oBACC,KAAK/B,KAAL,CAAWhB,OAAX,CAAmBgD,GAAnB,CAAwBL,MAAD,IAAY;AAClC,kBAAMM,KAAK,GAAG,KAAKjC,KAAL,CAAWf,KAAX,CAAiBiD,MAAjB,CAAyBC,IAAD,IAAUA,IAAI,CAAC1B,eAAL,KAAyBkB,MAAM,CAACrC,EAAlE,CAAd;AACA,gCAAO;AAAA,qCACL;AAAI,gBAAA,KAAK,EAAC,WAAV;AAAA,0BACG2C,KAAK,CAACG,IAAN,CAAW,CAACC,CAAD,EAAGC,CAAH,KAASD,CAAC,CAACE,QAAF,GAAaD,CAAC,CAACC,QAAnC,EAA6CP,GAA7C,CAAkDG,IAAD,IAAU;AAC1D,sCAAO;AAAA,2CACL;AAAI,sBAAA,KAAK,EAAC,gBAAV;AAAA,6CACE;AAAA,kCACCA,IAAI,CAACvC;AADN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADK,mCAAP;AAQD,iBATA;AADH;AAAA;AAAA;AAAA;AAAA;AADK,6BAAP;AAcD,WAhBA;AADD;AAAA;AAAA;AAAA;AAAA,gBAHF,eAsBA;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAtBA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADF;AA6BH;;AApKyB;;AA0K9B,eAAejB,KAAf","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport update from \"immutability-helper\";\nimport { Link, useParams} from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\nimport EdiText from 'react-editext'\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport Sortable from 'sortablejs';\n\nclass Board extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          columns: [],\n          cards: [],\n          board: null\n        };\n    }\n\n    loadColumns() {\n        const link = this.props.match.params.link;\n        axios \n          .get(`/api/v1/board/${link}`)\n          .then((res) => {\n            this.setState({ board: res.data });\n            axios\n            .get(`/api/v1/board_columns`, { params: {board_id: res.data.id} })\n            .then((res) => {\n              this.setState({ columns: res.data });\n              res.data.forEach((column) => {\n                axios\n                .get(`/api/v1/cards`, { params: {board_column_id: column.id} })\n                .then((res) => {\n                    const newCards = this.state.cards.concat(res.data)\n                    this.setState({cards: newCards})\n                  })\n                })\n              })\n            })\n    }\n\n    reloadColumns = () => {\n        this.setState({ columns: [], cards: [], board: null });\n        this.loadColumns();\n      };\n    \n    newColumn = (e, id) => {\n        if (e.key === \"Enter\" && !(e.target.value === \"\")) {\n            axios\n              .post(`/api/v1/board_columns`, { board_column: { title: e.target.value, board_id: id} })\n              .then((res) => {\n                const columns = update(this.state.columns, {\n                  $push: [[res.data]],\n                });     \n                this.setState({\n                  columns: columns,\n                  inputValue: \"\",\n                });\n                this.reloadColumns();\n              })\n              .catch((error) => console.log(error));\n            }\n    };\n\n    newCard = (e, id) => {\n        if (e.key === \"Enter\" && !(e.target.value === \"\")) {\n            axios\n              .post(`/api/v1/cards`, { cards: { title: e.target.value, board_column_id: id} })\n              .then((res) => {\n                const cards = update(this.state.cards, {\n                  $push: [[0,0, res.data]],\n                });\n        \n                this.setState({\n                  cards: cards,\n                  inputValue: \"\",\n                });\n                this.reloadColumns();\n              })\n              .catch((error) => console.log(error));\n            }\n    };\n\n    handleChange = (e) => {\n\t\tthis.setState({inputValue: e.target.value});\n\t  }\n\n\n    removeColumn = ( id ) => {\n        axios \n            .delete(`/api/v1/board_columns/${id}`)\n            .then((res) => {\n                const columnIndex = this.state.columns.findIndex((x) => x.id === id);\n                const columns = update(this.state.columns, {\n                  $splice: [[columnIndex, 1]],\n                });\n                this.setState({\n                    columns: columns,\n                });\n                // this.reloadColumns();\n                \n              })\n              .catch((error) => console.log(error));\n    };\n\n    removeCard = ( id ) => {\n        axios\n            .delete(`/api/v1/cards/${id}`)\n            .then((res) => {\n              const cardIndex = this.state.cards.findIndex((x) => x.id === id);\n              const cards = update(this.state.cards, {\n                $splice: [[cardIndex, 1]],\n              });\n              this.setState({\n                cards: cards,\n              });\n            })\n            .catch((error) => console.log(error));\n    };\n\n\n    componentDidMount() {\n        this.loadColumns();\n    }\n\n\n    modifyCard= (value, id) => {\n          axios\n              .put(`/api/v1/cards/${id}`, { cards: { title: value} })\n              .then((res) => {\n                const cardIndex = this.state.cards.findIndex(\n                  (x) => x.id === res.data.id\n                );\n                const cards = update(this.state.cards, {\n                  [cardIndex]: { $set: res.data },\n                });\n                this.setState({\n                  cards: cards,\n                });\n              })\n              .catch((error) => console.log(error));\n  };\n\n    render() {\n        return (\n          <DragDropContext>\n          <>\n          <div className=\"taskContainer\">\n          </div>\n            <div class=\"board\">  \n            {this.state.columns.map((column) => {\n              const Cards = this.state.cards.filter((card) => card.board_column_id === column.id);\n              return <>\n                <ul class=\"board-col\">\n                  {Cards.sort((a,b) => a.position - b.position).map((card) => {\n                    return <>\n                      <li class=\"board-col-item\">\n                        <div>\n                        {card.title}\n                        </div>\n                      </li>\n                      \n                    </>;\n                  })}\n                </ul>\n              </>;\n            })}\n          </div>\n          <div>\n              <Link to=\"/boards\">Back</Link>\n          </div></>\n          </DragDropContext>\n        );\n    }\n    \n\n\n}\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}