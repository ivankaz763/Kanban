{"ast":null,"code":"var _jsxFileName = \"/Users/Ivan/\\u0440\\u0430\\u0431\\u043E\\u0438\\u0447\\u0438\\u0306 \\u0441\\u0442\\u043E\\u043B/test4/boards-api/boards-app/src/components/Card.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Card(_ref) {\n  let {\n    board,\n    column,\n    cards,\n    rloadColumns,\n    newColumn,\n    handleChange,\n    removeColumn,\n    removeCard,\n    modifyCard,\n    inputValue\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      class: \"board-col\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        class: \"board-col-name\",\n        children: [column.title, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"removeItemButton\",\n          onClick: e => removeColumn(column.id),\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(TextInputCards, {\n        handleChange: handleChange,\n        newCard: newColumn,\n        board: board,\n        inputValue: inputValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_c = Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/Ivan/рабоичй стол/test4/boards-api/boards-app/src/components/Card.js"],"names":["React","Component","Card","board","column","cards","rloadColumns","newColumn","handleChange","removeColumn","removeCard","modifyCard","inputValue","title","e","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,OAAO,SAASC,IAAT,OACP;AAAA,MADqB;AAACC,IAAAA,KAAD;AAAQC,IAAAA,MAAR;AAAgBC,IAAAA,KAAhB;AAAuBC,IAAAA,YAAvB;AAAqCC,IAAAA,SAArC;AAAgDC,IAAAA,YAAhD;AAA8DC,IAAAA,YAA9D;AAA4EC,IAAAA,UAA5E;AAAwFC,IAAAA,UAAxF;AAAoGC,IAAAA;AAApG,GACrB;AACI,sBACI;AAAA,2BACA;AAAI,MAAA,KAAK,EAAC,WAAV;AAAA,8BACU;AAAI,QAAA,KAAK,EAAC,gBAAV;AAAA,mBACGR,MAAM,CAACS,KADV,eAEE;AAAM,UAAA,SAAS,EAAC,kBAAhB;AAAmC,UAAA,OAAO,EAAGC,CAAD,IAAOL,YAAY,CAACL,MAAM,CAACW,EAAR,CAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADV,eAsBU,QAAC,cAAD;AACE,QAAA,YAAY,EAAEP,YADhB;AAEE,QAAA,OAAO,EAAED,SAFX;AAGE,QAAA,KAAK,EAAEJ,KAHT;AAIE,QAAA,UAAU,EAAES;AAJd;AAAA;AAAA;AAAA;AAAA,cAtBV;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AAiCH;KAnCeV,I","sourcesContent":["import React, { Component } from \"react\";\n\nexport function Card({board, column, cards, rloadColumns, newColumn, handleChange, removeColumn, removeCard, modifyCard, inputValue})\n{\n    return (\n        <>\n        <ul class=\"board-col\">\n                  <li class=\"board-col-name\">\n                    {column.title}\n                    <span className=\"removeItemButton\" onClick={(e) => removeColumn(column.id)}>x</span>\n                  </li>\n               {/* {cards.sort((a,b) => a.position - b.position).map((card) => {\n                    return <>\n                      <li class=\"board-col-item\">\n                        <EdiText\n                            showButtonsOnHover\n                            submitOnEnter\n                            cancelOnEscape\n                            editOnViewClick={true}\n                            type='text'\n                            value={card.title}\n                            onSave={(event) => modifyCard(event, card.id)}\n                        />\n                        <span className=\"removeItemButton\" onClick={(e) => removeCard(card.id, card.position, card.board_column_id)}>x</span>\n                      </li>\n                      \n                    </>;\n                  })} */}\n                  <TextInputCards \n                    handleChange={handleChange}\n                    newCard={newColumn}\n                    board={board}\n                    inputValue={inputValue}\n                    />\n                </ul>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}