{"ast":null,"code":"var _jsxFileName = \"/Users/Ivan/\\u0440\\u0430\\u0431\\u043E\\u0438\\u0447\\u0438\\u0306 \\u0441\\u0442\\u043E\\u043B/test4/boards-api/boards-app/src/components/Column.js\";\nimport React, { Component } from \"react\";\nimport { TextInputCards } from \"./TextInputCards\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Column(_ref) {\n  let {\n    column,\n    removeColumn\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      class: \"board-col\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        class: \"board-col-name\",\n        children: [column.title, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"removeItemButton\",\n          onClick: e => removeColumn(column.id),\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 19\n      }, this), cards.sort((a, b) => a.position - b.position).map(card => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            class: \"board-col-item\",\n            children: [/*#__PURE__*/_jsxDEV(EdiText, {\n              showButtonsOnHover: true,\n              submitOnEnter: true,\n              cancelOnEscape: true,\n              editOnViewClick: true,\n              type: \"text\",\n              value: card.title,\n              onSave: event => modifyCard(event, card.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"removeItemButton\",\n              onClick: e => removeCard(card.id, card.position, card.board_column_id),\n              children: \"x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 23\n          }, this)\n        }, void 0, false);\n      }), /*#__PURE__*/_jsxDEV(TextInputCards, {\n        handleChange: handleChange,\n        newCard: newColumn,\n        board: board,\n        inputValue: inputValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"newCard\",\n        type: \"text\",\n        placeholder: \"New Card\",\n        maxLength: \"75\",\n        onKeyPress: event => this.newCard(event, column.id),\n        value: this.state.inputValue,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_c = Column;\n\nvar _c;\n\n$RefreshReg$(_c, \"Column\");","map":{"version":3,"sources":["/Users/Ivan/рабоичй стол/test4/boards-api/boards-app/src/components/Column.js"],"names":["React","Component","TextInputCards","Column","column","removeColumn","title","e","id","cards","sort","a","b","position","map","card","event","modifyCard","removeCard","board_column_id","handleChange","newColumn","board","inputValue","newCard","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,cAAT,QAA+B,kBAA/B;;;AAEA,OAAO,SAASC,MAAT,OACP;AAAA,MADuB;AAACC,IAAAA,MAAD;AAASC,IAAAA;AAAT,GACvB;AACI,sBACI;AAAA,2BACA;AAAI,MAAA,KAAK,EAAC,WAAV;AAAA,8BACU;AAAI,QAAA,KAAK,EAAC,gBAAV;AAAA,mBACGD,MAAM,CAACE,KADV,eAEE;AAAM,UAAA,SAAS,EAAC,kBAAhB;AAAmC,UAAA,OAAO,EAAGC,CAAD,IAAOF,YAAY,CAACD,MAAM,CAACI,EAAR,CAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADV,EAKQC,KAAK,CAACC,IAAN,CAAW,CAACC,CAAD,EAAGC,CAAH,KAASD,CAAC,CAACE,QAAF,GAAaD,CAAC,CAACC,QAAnC,EAA6CC,GAA7C,CAAkDC,IAAD,IAAU;AACvD,4BAAO;AAAA,iCACL;AAAI,YAAA,KAAK,EAAC,gBAAV;AAAA,oCACE,QAAC,OAAD;AACI,cAAA,kBAAkB,MADtB;AAEI,cAAA,aAAa,MAFjB;AAGI,cAAA,cAAc,MAHlB;AAII,cAAA,eAAe,EAAE,IAJrB;AAKI,cAAA,IAAI,EAAC,MALT;AAMI,cAAA,KAAK,EAAEA,IAAI,CAACT,KANhB;AAOI,cAAA,MAAM,EAAGU,KAAD,IAAWC,UAAU,CAACD,KAAD,EAAQD,IAAI,CAACP,EAAb;AAPjC;AAAA;AAAA;AAAA;AAAA,oBADF,eAUE;AAAM,cAAA,SAAS,EAAC,kBAAhB;AAAmC,cAAA,OAAO,EAAGD,CAAD,IAAOW,UAAU,CAACH,IAAI,CAACP,EAAN,EAAUO,IAAI,CAACF,QAAf,EAAyBE,IAAI,CAACI,eAA9B,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADK,yBAAP;AAeD,OAhBH,CALR,eAsBU,QAAC,cAAD;AACE,QAAA,YAAY,EAAEC,YADhB;AAEE,QAAA,OAAO,EAAEC,SAFX;AAGE,QAAA,KAAK,EAAEC,KAHT;AAIE,QAAA,UAAU,EAAEC;AAJd;AAAA;AAAA;AAAA;AAAA,cAtBV,eA4BU;AACU,QAAA,SAAS,EAAC,SADpB;AAEU,QAAA,IAAI,EAAC,MAFf;AAGU,QAAA,WAAW,EAAC,UAHtB;AAIU,QAAA,SAAS,EAAC,IAJpB;AAKU,QAAA,UAAU,EAAGP,KAAD,IAAW,KAAKQ,OAAL,CAAaR,KAAb,EAAoBZ,MAAM,CAACI,EAA3B,CALjC;AAMU,QAAA,KAAK,EAAE,KAAKiB,KAAL,CAAWF,UAN5B;AAOU,QAAA,QAAQ,EAAE,KAAKH;AAPzB;AAAA;AAAA;AAAA;AAAA,cA5BV;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AA0CH;KA5CejB,M","sourcesContent":["import React, { Component } from \"react\";\nimport { TextInputCards } from \"./TextInputCards\";\n\nexport function Column({column, removeColumn})\n{\n    return (\n        <>\n        <ul class=\"board-col\">\n                  <li class=\"board-col-name\">\n                    {column.title}\n                    <span className=\"removeItemButton\" onClick={(e) => removeColumn(column.id)}>x</span>\n                  </li>\n               {cards.sort((a,b) => a.position - b.position).map((card) => {\n                    return <>\n                      <li class=\"board-col-item\">\n                        <EdiText\n                            showButtonsOnHover\n                            submitOnEnter\n                            cancelOnEscape\n                            editOnViewClick={true}\n                            type='text'\n                            value={card.title}\n                            onSave={(event) => modifyCard(event, card.id)}\n                        />\n                        <span className=\"removeItemButton\" onClick={(e) => removeCard(card.id, card.position, card.board_column_id)}>x</span>\n                      </li>\n                      \n                    </>;\n                  })}\n                  <TextInputCards \n                    handleChange={handleChange}\n                    newCard={newColumn}\n                    board={board}\n                    inputValue={inputValue}\n                    />\n                  <input\n                            className=\"newCard\"\n                            type=\"text\"\n                            placeholder=\"New Card\"\n                            maxLength=\"75\"\n                            onKeyPress={(event) => this.newCard(event, column.id)}\n                            value={this.state.inputValue}\n                            onChange={this.handleChange}\n                        /> \n                </ul>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}