{"ast":null,"code":"var _jsxFileName = \"/Users/Ivan/\\u0440\\u0430\\u0431\\u043E\\u0438\\u0447\\u0438\\u0306 \\u0441\\u0442\\u043E\\u043B/test4/boards-api/boards-app/src/components/Board.js\";\nimport React, { Component } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { TextInput } from \"./TextInput\";\nimport { Column } from \"./Column\";\nimport axios from \"axios\";\nimport update from \"immutability-helper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Board(_ref) {\n  let {\n    board,\n    columns,\n    cards,\n    newCard,\n    handleChange,\n    removeColumn,\n    removeCard,\n    modifyCard,\n    inputValue,\n    cardMove,\n    cardMoveRight,\n    cardMoveLeft\n  } = _ref;\n\n  newColumn = (e, id) => {\n    if (e.key === \"Enter\" && !(e.target.value === \"\")) {\n      axios.post(`/api/v1/board_columns`, {\n        board_column: {\n          title: e.target.value,\n          board_id: id\n        }\n      }).then(res => {\n        const columns = update(this.state.columns, {\n          $push: [res.data]\n        });\n        this.setState({\n          columns: columns,\n          inputValue: \"\"\n        });\n      }).catch(error => console.log(error));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(TextInput, {\n        handleChange: handleChange,\n        newItem: this.newColumn,\n        item: board,\n        inputValue: inputValue,\n        placeholder: \"Input a New Column and press Enter\",\n        className: \"newColumn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"board\",\n      children: columns.map(column => {\n        const Cards = cards.filter(card => card.board_column_id === column.id);\n        return /*#__PURE__*/_jsxDEV(Column, {\n          cards: Cards,\n          column: column,\n          removeColumn: removeColumn,\n          newCard: newCard,\n          removeCard: removeCard,\n          modifyCard: modifyCard,\n          cardMove: cardMove,\n          cardMoveLeft: cardMoveLeft,\n          cardMoveRight: cardMoveRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 24\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/boards\",\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n}\n_c = Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/Users/Ivan/рабоичй стол/test4/boards-api/boards-app/src/components/Board.js"],"names":["React","Component","Link","useParams","TextInput","Column","axios","update","Board","board","columns","cards","newCard","handleChange","removeColumn","removeCard","modifyCard","inputValue","cardMove","cardMoveRight","cardMoveLeft","newColumn","e","id","key","target","value","post","board_column","title","board_id","then","res","state","$push","data","setState","catch","error","console","log","map","column","Cards","filter","card","board_column_id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link, useParams} from \"react-router-dom\";\nimport { TextInput } from \"./TextInput\";\nimport {Column} from \"./Column\";\nimport axios from \"axios\";\nimport update from \"immutability-helper\";\n\nexport function Board({board, columns, cards, newCard, handleChange, removeColumn, removeCard, modifyCard, inputValue, cardMove, cardMoveRight, cardMoveLeft}) \n{\n  newColumn = (e, id) => {\n    if (e.key === \"Enter\" && !(e.target.value === \"\")) {\n        axios\n          .post(`/api/v1/board_columns`, { board_column: { title: e.target.value, board_id: id} })\n          .then((res) => {\n            const columns = update(this.state.columns, {\n              $push: [res.data],\n            });     \n            this.setState({\n              columns: columns,\n              inputValue: \"\",\n            });\n          })\n          .catch((error) => console.log(error));\n        }\n  };\n\n  return (\n    <>\n    <div>\n            <TextInput\n                handleChange={handleChange}\n                newItem={this.newColumn}\n                item={board}\n                inputValue={inputValue}\n                placeholder=\"Input a New Column and press Enter\"\n                className=\"newColumn\"\n            />\n          </div>\n            <div class=\"board\">  \n            {columns.map((column) => {\n              const Cards = cards.filter((card) => card.board_column_id === column.id);\n                return < Column\n                  cards={Cards}\n                  column={column}\n                  removeColumn={removeColumn}\n                  newCard={newCard}\n                  removeCard={removeCard}\n                  modifyCard={modifyCard}\n                  cardMove={cardMove}\n                  cardMoveLeft={cardMoveLeft}\n                  cardMoveRight={cardMoveRight}\n                />\n            })}\n          </div>\n          <div>\n              <Link to=\"/boards\">Back</Link>\n          </div>\n          </>\n\n  )\n}"]},"metadata":{},"sourceType":"module"}