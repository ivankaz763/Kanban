{"ast":null,"code":"var _jsxFileName = \"/Users/Ivan/\\u0440\\u0430\\u0431\\u043E\\u0438\\u0447\\u0438\\u0306 \\u0441\\u0442\\u043E\\u043B/test4/boards-api/boards-app/src/components/Board.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport update from \"immutability-helper\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\nimport EdiText from 'react-editext';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { TextInput } from \"./TextInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Board(_ref) {\n  let {\n    board,\n    columns,\n    cards,\n    reloadColumns,\n    newColumn,\n    newCard,\n    handleChange,\n    removeColumn,\n    removeCard,\n    modifyCard\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"taskContainer\",\n      children: /*#__PURE__*/_jsxDEV(TextInput, {\n        newColumn: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"board\",\n      children: columns.map(column => {\n        const Cards = cards.filter(card => card.board_column_id === column.id);\n\n        /*#__PURE__*/\n        _jsxDEV(Column, {\n          cards: this.state.Cards,\n          column: this.state.column,\n          removeColumn: this.props.removeColumn,\n          newCard: this.newCard,\n          removeCard: this.removeCard\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this);\n\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            class: \"board-col\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              class: \"board-col-name\",\n              children: [column.title, /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"removeItemButton\",\n                onClick: e => removeColumn(column.id),\n                children: \"x\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 19\n            }, this), Cards.sort((a, b) => a.position - b.position).map(card => {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"li\", {\n                  class: \"board-col-item\",\n                  children: [/*#__PURE__*/_jsxDEV(EdiText, {\n                    showButtonsOnHover: true,\n                    submitOnEnter: true,\n                    cancelOnEscape: true,\n                    editOnViewClick: true,\n                    type: \"text\",\n                    value: card.title,\n                    onSave: event => modifyCard(event, card.id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 45,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"removeItemButton\",\n                    onClick: e => removeCard(card.id, card.position, card.board_column_id),\n                    children: \"x\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 54,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this)\n        }, void 0, false);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/boards\",\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n}\n_c = Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/Users/Ivan/рабоичй стол/test4/boards-api/boards-app/src/components/Board.js"],"names":["React","Component","axios","update","Link","useParams","withRouter","EdiText","DragDropContext","Droppable","Draggable","TextInput","Board","board","columns","cards","reloadColumns","newColumn","newCard","handleChange","removeColumn","removeCard","modifyCard","map","column","Cards","filter","card","board_column_id","id","state","props","title","e","sort","a","b","position","event"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport update from \"immutability-helper\";\nimport { Link, useParams} from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\nimport EdiText from 'react-editext'\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { TextInput } from \"./TextInput\";\n\nexport function Board({board, columns, cards, reloadColumns, newColumn, newCard, handleChange, removeColumn, removeCard, modifyCard }) \n{\n  return (\n    <>\n    <div className=\"taskContainer\">\n            {/* <input\n              className=\"newColumn\"\n              type=\"text\"\n              placeholder=\"Input a New Column and Press Enter\"\n              maxLength=\"75\"\n              onKeyPress={(event) => newColumn(event, board.id)}\n              value={inputValue}\n              onChange={handleChange}\n            /> */}\n            <TextInput newColumn/>\n          </div>\n            <div class=\"board\">  \n            {columns.map((column) => {\n              const Cards = cards.filter((card) => card.board_column_id === column.id);\n                <Column\n                  cards={this.state.Cards}\n                  column={this.state.column}\n                  removeColumn={this.props.removeColumn}\n                  newCard={this.newCard}\n                  removeCard={this.removeCard}\n                />\n              return <>\n                <ul class=\"board-col\">\n                  <li class=\"board-col-name\">\n                    {column.title}\n                    <span className=\"removeItemButton\" onClick={(e) => removeColumn(column.id)}>x</span>\n                  </li>\n                  {Cards.sort((a,b) => a.position - b.position).map((card) => {\n                    return <>\n                      <li class=\"board-col-item\">\n                        <EdiText\n                            showButtonsOnHover\n                            submitOnEnter\n                            cancelOnEscape\n                            editOnViewClick={true}\n                            type='text'\n                            value={card.title}\n                            onSave={(event) => modifyCard(event, card.id)}\n                        />\n                        <span className=\"removeItemButton\" onClick={(e) => removeCard(card.id, card.position, card.board_column_id)}>x</span>\n                      </li>\n                      \n                    </>;\n                  })}\n                  {/* <input\n                            className=\"newCard\"\n                            type=\"text\"\n                            placeholder=\"New Card\"\n                            maxLength=\"75\"\n                            onKeyPress={(event) => this.newCard(event, column.id)}\n                            value={this.state.inputValue}\n                            onChange={this.handleChange}\n                        /> */}\n                </ul>\n              </>;\n            })}\n          </div>\n          <div>\n              <Link to=\"/boards\">Back</Link>\n          </div>\n          </>\n\n  )\n}"]},"metadata":{},"sourceType":"module"}