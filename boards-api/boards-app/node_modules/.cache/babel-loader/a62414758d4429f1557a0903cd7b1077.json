{"ast":null,"code":"var _jsxFileName = \"/Users/Ivan/Desktop/test4/boards-api/boards-app/src/components/Board.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport update from \"immutability-helper\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Board extends Component {\n  constructor(props) {\n    super(props);\n\n    this.reloadCards = () => {\n      this.setState({\n        cards: []\n      });\n      this.loadColumns();\n    };\n\n    this.newColumn = (e, board_id) => {\n      debugger;\n\n      if (e.key === \"Enter\" && !(e.target.value === \"\")) {\n        axios.post(`/api/v1/boards/${board_id}/board_columns`, {\n          column: {\n            title: e.target.value\n          }\n        }).then(res => {\n          const columns = update(this.state.columns, {\n            $splice: [[0, 0, res.data]]\n          });\n          this.setState({\n            columns: columns,\n            inputValue: \"\"\n          });\n        }).catch(error => console.log(error));\n      }\n    };\n\n    this.newCard = e => {\n      debugger;\n\n      if (e.key === \"Enter\" && !(e.target.value === \"\")) {\n        axios.post(`/api/v1/boards/1/board_columns/3/cards`, {\n          card: {\n            title: e.target.value,\n            board_column_id: 3,\n            board_id: 1\n          }\n        }).then(res => {\n          this.reloadCards();\n          this.setState({\n            inputValue: \"\"\n          });\n        }).catch(error => console.log(error));\n      }\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        inputValue: e.target.value\n      });\n    };\n\n    this.removeColumn = (board_id, id) => {\n      axios.delete(`/api/v1/boards/${board_id}/board_columns/${id}`).then(res => {\n        const columnIndex = this.state.columns.findIndex(x => x.id === id);\n        const columns = update(this.state.columns, {\n          $splice: [[columnIndex, 1]]\n        });\n        this.setState({\n          columns: columns\n        });\n        this.reloadCards();\n      }).catch(error => console.log(error));\n    };\n\n    this.removeCard = (board_id, id) => {\n      axios.delete(`/api/v1/boards/${board_id}/board_columns/:board_column_id/cards/${id}`).then(res => {\n        this.reloadCards();\n      }).catch(error => console.log(error));\n    };\n\n    this.state = {\n      columns: [],\n      cards: []\n    };\n  }\n\n  loadColumns() {\n    axios.get(`/api/v1/board_columns`, {\n      board: {\n        board_id: 2\n      }\n    }).then(res => {\n      this.setState({\n        columns: res.data\n      });\n    });\n    axios.get(`/api/v1/cards`, {\n      card: {\n        board_id: 2\n      }\n    }).then(res => {\n      this.setState({\n        cards: res.data\n      });\n    }).catch(error => console.log(error));\n  }\n\n  componentDidMount() {\n    this.loadColumns();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"topHeading\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Boards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrapItems\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"newColumn\",\n            type: \"text\",\n            placeholder: \"Input a New Column and Press Enter\",\n            maxLength: \"75\",\n            onKeyPress: event => this.newColumn(event, 3),\n            value: this.state.inputValue,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"listItems\",\n            children: this.state.columns.map(column => {\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"item\",\n                column: column,\n                children: [/*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/boards\",\n                  children: column.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"itemDisplay\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"removeItemButton\",\n                  onClick: e => this.removeColumn(1, column.id),\n                  children: \"x\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 25\n                }, this)]\n              }, column.board_id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 25\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"taskContainer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"newColumn\",\n            type: \"text\",\n            placeholder: \"Input a New Card and Press Enter\",\n            maxLength: \"75\",\n            onKeyPress: this.newCard,\n            value: this.state.inputValue,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"listItems\",\n            children: this.state.cards.map(card => {\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"item\",\n                card: card,\n                children: [/*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/boards\",\n                  children: card.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"itemDisplay\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"removeItemButton\",\n                  onClick: e => this.removeCard(1, card.id),\n                  children: \"x\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 25\n                }, this)]\n              }, card.board_column_id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 25\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/boards\",\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/Ivan/Desktop/test4/boards-api/boards-app/src/components/Board.js"],"names":["React","Component","axios","update","Link","Board","constructor","props","reloadCards","setState","cards","loadColumns","newColumn","e","board_id","key","target","value","post","column","title","then","res","columns","state","$splice","data","inputValue","catch","error","console","log","newCard","card","board_column_id","handleChange","removeColumn","id","delete","columnIndex","findIndex","x","removeCard","get","board","componentDidMount","render","event","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport update from \"immutability-helper\";\nimport { Link } from \"react-router-dom\";\n\nclass Board extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          columns: [],\n          cards: []\n        };\n    }\n\n    loadColumns() {\n        axios\n          .get(`/api/v1/board_columns`, { board: {board_id: 2} })\n          .then((res) => {\n            this.setState({ columns: res.data });\n          })\n        axios\n          .get(`/api/v1/cards`, { card: {board_id: 2} })\n          .then((res) => {\n            this.setState({ cards: res.data });\n          })\n        .catch((error) => console.log(error));\n    }\n\n    reloadCards = () => {\n        this.setState({ cards: [] });\n        this.loadColumns();\n      };\n    \n    newColumn = (e, board_id) => {\n        debugger;\n        if (e.key === \"Enter\" && !(e.target.value === \"\")) {\n            axios\n              .post(`/api/v1/boards/${board_id}/board_columns`, { column: { title: e.target.value } })\n              .then((res) => {\n                const columns = update(this.state.columns, {\n                  $splice: [[0, 0, res.data]],\n                });\n        \n                this.setState({\n                    columns: columns,\n                  inputValue: \"\",\n                });\n              })\n              .catch((error) => console.log(error));\n            }\n    };\n\n    newCard = (e) => {\n        debugger;\n        if (e.key === \"Enter\" && !(e.target.value === \"\")) {\n            axios\n              .post(`/api/v1/boards/1/board_columns/3/cards`, { card: { title: e.target.value, board_column_id: 3, board_id: 1} })\n              .then((res) => {\n                this.reloadCards();\n        \n                this.setState({\n                  inputValue: \"\",\n                });\n              })\n              .catch((error) => console.log(error));\n            }\n    };\n\n    handleChange = (e) => {\n\t\tthis.setState({inputValue: e.target.value});\n\t  }\n\n\n    removeColumn = (board_id, id) => {\n        axios \n            .delete(`/api/v1/boards/${board_id}/board_columns/${id}`)\n            .then((res) => {\n                const columnIndex = this.state.columns.findIndex((x) => x.id === id);\n                const columns = update(this.state.columns, {\n                  $splice: [[columnIndex, 1]],\n                });\n                this.setState({\n                    columns: columns,\n                });\n                this.reloadCards();\n              })\n              .catch((error) => console.log(error));\n    };\n\n    removeCard = (board_id, id) => {\n        axios\n            .delete(`/api/v1/boards/${board_id}/board_columns/:board_column_id/cards/${id}`)\n            .then((res) => {\n                this.reloadCards();\n              })\n              .catch((error) => console.log(error));\n    };\n\n\n    componentDidMount() {\n        this.loadColumns();\n    }\n\n    render() {\n        return (\n                \n\n            <div>\n            <div className=\"topHeading\">\n              <h1>Boards</h1>\n              <div className=\"wrapItems\">\n              <input\n                    className=\"newColumn\"\n                    type=\"text\"\n                    placeholder=\"Input a New Column and Press Enter\"\n                    maxLength=\"75\"\n                    onKeyPress={(event) => this.newColumn(event, 3)}\n                    value={this.state.inputValue}\n                    onChange={this.handleChange}\n                />\n                <div className=\"listItems\">\n                    {this.state.columns.map((column) => {\n                    return (\n                        <li className=\"item\" column={column} key={column.board_id}>\n                        <Link to=\"/boards\">{column.title}</Link>\n                        <label className=\"itemDisplay\"></label>\n                        <span className=\"removeItemButton\" onClick={(e) => this.removeColumn(1,column.id)}>\n                            x\n                        </span>\n                        </li>\n                    );\n                    })}\n                </div>\n                <div className=\"taskContainer\">\n                </div>\n                <input\n                    className=\"newColumn\"\n                    type=\"text\"\n                    placeholder=\"Input a New Card and Press Enter\"\n                    maxLength=\"75\"\n                    onKeyPress={this.newCard}\n                    value={this.state.inputValue}\n                    onChange={this.handleChange}\n                />\n                <div className=\"listItems\">\n                    {this.state.cards.map((card) => {\n                    return (\n                        <li className=\"item\" card={card} key={card.board_column_id}>\n                        <Link to=\"/boards\">{card.title}</Link>\n                        <label className=\"itemDisplay\"></label>\n                        <span className=\"removeItemButton\" onClick={(e) => this.removeCard(1,card.id)}>\n                            x\n                        </span>\n                        </li>\n                    );\n                    })}\n                </div>\n                </div>\n              <Link to=\"/boards\">Back</Link>\n            </div>\n          </div>\n\n        );\n    }\n\n\n}\n\n\n\n\n\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}