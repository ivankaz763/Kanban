{"ast":null,"code":"var _jsxFileName = \"/Users/Ivan/Desktop/test4/boards-api/boards-app/src/components/Column.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport update from \"immutability-helper\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\nimport EdiText from 'react-editext';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Column(_ref) {\n  let {\n    columns,\n    cards,\n    reloadColumns,\n    newColumn,\n    newCard,\n    handleChange,\n    removeColumn,\n    removeCard,\n    modifyCard\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"taskContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"newColumn\",\n        type: \"text\",\n        placeholder: \"Input a New Column and Press Enter\",\n        maxLength: \"75\",\n        onKeyPress: event => this.newColumn(event, this.state.board.id),\n        value: this.state.inputValue,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"board\",\n      children: this.state.columns.map(column => {\n        const Cards = this.state.cards.filter(card => card.board_column_id === column.id);\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            class: \"board-col\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              class: \"board-col-name\",\n              children: [column.title, /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"removeItemButton\",\n                onClick: e => this.removeColumn(column.id),\n                children: \"x\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 19\n            }, this), Cards.sort((a, b) => a.position - b.position).map(card => {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"li\", {\n                  class: \"board-col-item\",\n                  children: [/*#__PURE__*/_jsxDEV(EdiText, {\n                    showButtonsOnHover: true,\n                    submitOnEnter: true,\n                    cancelOnEscape: true,\n                    editOnViewClick: true,\n                    type: \"text\",\n                    value: card.title,\n                    onSave: event => this.modifyCard(event, card.id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 36,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"removeItemButton\",\n                    onClick: e => this.removeCard(card.id, card.position, card.board_column_id),\n                    children: \"x\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 45,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false);\n            }), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"newCard\",\n              type: \"text\",\n              placeholder: \"New Card\",\n              maxLength: \"75\",\n              onKeyPress: event => this.newCard(event, column.id),\n              value: this.state.inputValue,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 17\n          }, this)\n        }, void 0, false);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/boards\",\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n}\n_c = Column;\n\nvar _c;\n\n$RefreshReg$(_c, \"Column\");","map":{"version":3,"sources":["/Users/Ivan/Desktop/test4/boards-api/boards-app/src/components/Column.js"],"names":["React","Component","axios","update","Link","useParams","withRouter","EdiText","DragDropContext","Droppable","Draggable","Column","columns","cards","reloadColumns","newColumn","newCard","handleChange","removeColumn","removeCard","modifyCard","event","state","board","id","inputValue","map","column","Cards","filter","card","board_column_id","title","e","sort","a","b","position"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport update from \"immutability-helper\";\nimport { Link, useParams} from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\nimport EdiText from 'react-editext'\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\nexport function Column({columns, cards, reloadColumns, newColumn, newCard, handleChange, removeColumn, removeCard, modifyCard }) \n{\n  return (\n    <>\n    <div className=\"taskContainer\">\n            <input\n              className=\"newColumn\"\n              type=\"text\"\n              placeholder=\"Input a New Column and Press Enter\"\n              maxLength=\"75\"\n              onKeyPress={(event) => this.newColumn(event, this.state.board.id)}\n              value={this.state.inputValue}\n              onChange={this.handleChange}\n            />\n          </div>\n            <div class=\"board\">  \n            {this.state.columns.map((column) => {\n              const Cards = this.state.cards.filter((card) => card.board_column_id === column.id);\n              return <>\n                <ul class=\"board-col\">\n                  <li class=\"board-col-name\">\n                    {column.title}\n                    <span className=\"removeItemButton\" onClick={(e) => this.removeColumn(column.id)}>x</span>\n                  </li>\n                  {Cards.sort((a,b) => a.position - b.position).map((card) => {\n                    return <>\n                      <li class=\"board-col-item\">\n                        <EdiText\n                            showButtonsOnHover\n                            submitOnEnter\n                            cancelOnEscape\n                            editOnViewClick={true}\n                            type='text'\n                            value={card.title}\n                            onSave={(event) => this.modifyCard(event, card.id)}\n                        />\n                        <span className=\"removeItemButton\" onClick={(e) => this.removeCard(card.id, card.position, card.board_column_id)}>x</span>\n                      </li>\n                      \n                    </>;\n                  })}\n                  <input\n                            className=\"newCard\"\n                            type=\"text\"\n                            placeholder=\"New Card\"\n                            maxLength=\"75\"\n                            onKeyPress={(event) => this.newCard(event, column.id)}\n                            value={this.state.inputValue}\n                            onChange={this.handleChange}\n                        />\n                </ul>\n              </>;\n            })}\n          </div>\n          <div>\n              <Link to=\"/boards\">Back</Link>\n          </div>\n          </>\n\n  )\n}"]},"metadata":{},"sourceType":"module"}