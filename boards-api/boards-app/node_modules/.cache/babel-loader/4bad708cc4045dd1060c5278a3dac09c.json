{"ast":null,"code":"var _jsxFileName = \"/Users/Ivan/Desktop/test4/boards-api/boards-app/src/components/Board.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport update from \"immutability-helper\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\nimport EdiText from 'react-editext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Board extends Component {\n  constructor(props) {\n    super(props);\n\n    this.reloadCards = () => {\n      this.setState({\n        cards: []\n      });\n      this.loadColumns();\n    };\n\n    this.reloadColumns = () => {\n      this.setState({\n        columns: []\n      });\n      this.loadColumns();\n    };\n\n    this.modifyCard = (e, id) => {\n      axios.put(`/api/v1/cards/${id}`, {\n        tdlist: {\n          title: e.target.checked\n        }\n      }).then(res => {\n        const tdlistIndex = this.state.tdlists.findIndex(x => x.id === res.data.id);\n        const tdlists = update(this.state.tdlists, {\n          [tdlistIndex]: {\n            $set: res.data\n          }\n        });\n        this.setState({\n          tdlists: tdlists\n        });\n      }).catch(error => console.log(error));\n    };\n\n    this.newColumn = (e, id) => {\n      if (e.key === \"Enter\" && !(e.target.value === \"\")) {\n        axios.post(`/api/v1/board_columns`, {\n          board_column: {\n            title: e.target.value,\n            board_id: id\n          }\n        }).then(res => {\n          this.reloadColumns();\n          this.setState({\n            inputValue: \"\"\n          });\n        }).catch(error => console.log(error));\n      }\n    };\n\n    this.newCard = (e, column_id, id) => {\n      if (e.key === \"Enter\" && !(e.target.value === \"\")) {\n        axios.post(`/api/v1/cards`, {\n          card: {\n            title: e.target.value,\n            board_column_id: column_id,\n            board_id: id\n          }\n        }).then(res => {\n          this.reloadCards();\n          this.setState({\n            inputValue: \"\"\n          });\n        }).catch(error => console.log(error));\n      }\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        inputValue: e.target.value\n      });\n    };\n\n    this.removeColumn = id => {\n      axios.delete(`/api/v1/board_columns/${id}`).then(res => {\n        const columnIndex = this.state.columns.findIndex(x => x.id === id);\n        const columns = update(this.state.columns, {\n          $splice: [[columnIndex, 1]]\n        });\n        this.setState({\n          columns: columns\n        });\n        this.reloadCards();\n      }).catch(error => console.log(error));\n    };\n\n    this.removeCard = id => {\n      axios.delete(`/api/v1/cards/${id}`).then(res => {\n        this.reloadCards();\n      }).catch(error => console.log(error));\n    };\n\n    this.state = {\n      columns: [],\n      cards: [],\n      board: null\n    };\n  }\n\n  loadColumns() {\n    const id = this.props.match.params.id;\n    axios.get(`/api/v1/board_columns`, {\n      params: {\n        board_id: id\n      }\n    }).then(res => {\n      this.setState({\n        columns: res.data\n      });\n    });\n    axios.get(`/api/v1/cards`, {\n      params: {\n        board_id: id\n      }\n    }).then(res => {\n      this.setState({\n        cards: res.data\n      });\n    }).catch(error => console.log(error));\n    axios.get(`/api/v1/boards/${id}`).then(res => {\n      this.setState({\n        board: res.data\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.loadColumns();\n  }\n\n  render() {\n    const id = this.props.match.params.id;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"topHeading\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Boards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrapItems\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"newColumn\",\n            type: \"text\",\n            placeholder: \"Input a New Column and Press Enter\",\n            maxLength: \"75\",\n            onKeyPress: event => this.newColumn(event, id),\n            value: this.state.inputValue,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"listItems\",\n            children: this.state.columns.map(column => {\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"item\",\n                column: column,\n                children: [/*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/boards\",\n                  children: column.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"itemDisplay\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  onClick: e => this.removeColumn(column.id),\n                  children: \"x\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 25\n                }, this)]\n              }, column.board_id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 25\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"taskContainer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"newColumn\",\n            type: \"text\",\n            placeholder: \"Input a New Card and Press Enter\",\n            maxLength: \"75\",\n            onKeyPress: event => this.newCard(event, 6, id),\n            value: this.state.inputValue,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"listItems\",\n            children: this.state.cards.map(card => {\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"item\",\n                card: card,\n                children: [/*#__PURE__*/_jsxDEV(EdiText, {\n                  type: \"text\",\n                  value: card.title,\n                  onSave: this.onSave\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"itemDisplay\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"removeItemButton\",\n                  onClick: e => this.removeCard(card.id),\n                  children: \"x\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 25\n                }, this)]\n              }, card.board_column_id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 25\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/boards\",\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/Ivan/Desktop/test4/boards-api/boards-app/src/components/Board.js"],"names":["React","Component","axios","update","Link","useParams","withRouter","EdiText","Board","constructor","props","reloadCards","setState","cards","loadColumns","reloadColumns","columns","modifyCard","e","id","put","tdlist","title","target","checked","then","res","tdlistIndex","state","tdlists","findIndex","x","data","$set","catch","error","console","log","newColumn","key","value","post","board_column","board_id","inputValue","newCard","column_id","card","board_column_id","handleChange","removeColumn","delete","columnIndex","$splice","removeCard","board","match","params","get","componentDidMount","render","event","map","column","onSave"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport update from \"immutability-helper\";\nimport { Link, useParams} from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\nimport EdiText from 'react-editext'\n\nclass Board extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          columns: [],\n          cards: [],\n          board: null\n        };\n    }\n\n    loadColumns() {\n        const id = this.props.match.params.id;\n        axios\n          .get(`/api/v1/board_columns`, { params: {board_id: id} })\n          .then((res) => {\n            this.setState({ columns: res.data });\n          })\n        axios\n          .get(`/api/v1/cards`, { params: {board_id: id} })\n          .then((res) => {\n            this.setState({ cards: res.data });\n          })\n        .catch((error) => console.log(error));\n        axios \n          .get(`/api/v1/boards/${id}`)\n          .then((res) => {\n            this.setState({ board: res.data });\n          })\n    }\n\n    reloadCards = () => {\n        this.setState({ cards: [] });\n        this.loadColumns();\n      };\n\n    reloadColumns = () => {\n        this.setState({ columns: [] });\n        this.loadColumns();\n      };\n\n\n\n    modifyCard= (e, id) => {\n        axios\n          .put(`/api/v1/cards/${id}`, { tdlist: { title: e.target.checked } })\n          .then((res) => {\n            const tdlistIndex = this.state.tdlists.findIndex(\n              (x) => x.id === res.data.id\n            );\n            const tdlists = update(this.state.tdlists, {\n              [tdlistIndex]: { $set: res.data },\n            });\n            this.setState({\n              tdlists: tdlists,\n            });\n          })\n          .catch((error) => console.log(error));\n    };\n\n\n    \n    newColumn = (e, id) => {\n        if (e.key === \"Enter\" && !(e.target.value === \"\")) {\n            axios\n              .post(`/api/v1/board_columns`, { board_column: { title: e.target.value, board_id: id} })\n              .then((res) => {\n                this.reloadColumns();\n        \n                this.setState({\n                  inputValue: \"\",\n                });\n              })\n              .catch((error) => console.log(error));\n            }\n    };\n\n    newCard = (e, column_id, id) => {\n        if (e.key === \"Enter\" && !(e.target.value === \"\")) {\n            axios\n              .post(`/api/v1/cards`, { card: { title: e.target.value, board_column_id: column_id, board_id: id} })\n              .then((res) => {\n                this.reloadCards();\n        \n                this.setState({\n                  inputValue: \"\",\n                });\n              })\n              .catch((error) => console.log(error));\n            }\n    };\n\n    handleChange = (e) => {\n\t\tthis.setState({inputValue: e.target.value});\n\t  }\n\n\n    removeColumn = ( id ) => {\n        axios \n            .delete(`/api/v1/board_columns/${id}`)\n            .then((res) => {\n                const columnIndex = this.state.columns.findIndex((x) => x.id === id);\n                const columns = update(this.state.columns, {\n                  $splice: [[columnIndex, 1]],\n                });\n                this.setState({\n                    columns: columns,\n                });\n                this.reloadCards();\n                \n              })\n              .catch((error) => console.log(error));\n    };\n\n    removeCard = ( id ) => {\n        axios\n            .delete(`/api/v1/cards/${id}`)\n            .then((res) => {\n                this.reloadCards();\n              })\n              .catch((error) => console.log(error));\n    };\n\n\n    componentDidMount() {\n        this.loadColumns();\n    }\n\n    render() {\n        const id = this.props.match.params.id;\n        return (\n                \n\n            <div>\n            <div className=\"topHeading\">\n              <h1>Boards</h1>\n              <div className=\"wrapItems\">\n              <input\n                    className=\"newColumn\"\n                    type=\"text\"\n                    placeholder=\"Input a New Column and Press Enter\"\n                    maxLength=\"75\"\n                    onKeyPress={(event) => this.newColumn(event, id)}\n                    value={this.state.inputValue}\n                    onChange={this.handleChange}\n                />\n                <div className=\"listItems\">\n                    {this.state.columns.map((column) => {\n                    return (\n                        <li className=\"item\" column={column} key={column.board_id}>\n                        <Link to=\"/boards\">{column.title}</Link>\n                        <label className=\"itemDisplay\"></label>\n                        <span onClick={(e) => this.removeColumn(column.id)}>\n                            x\n                        </span>\n                        </li>\n                    );\n                    })}\n                </div>\n                <div className=\"taskContainer\">\n                </div>\n                <input\n                    className=\"newColumn\"\n                    type=\"text\"\n                    placeholder=\"Input a New Card and Press Enter\"\n                    maxLength=\"75\"\n                    onKeyPress={(event) => this.newCard(event, 6, id)}\n                    value={this.state.inputValue}\n                    onChange={this.handleChange}\n                />\n                <div className=\"listItems\">\n                    {this.state.cards.map((card) => {\n                    return (\n                        <li className=\"item\" card={card} key={card.board_column_id}>\n                        <EdiText\n                            type='text'\n                            value={card.title}\n                            onSave={this.onSave}\n                        />\n                        <label className=\"itemDisplay\"></label>\n                        <span className=\"removeItemButton\" onClick={(e) => this.removeCard(card.id)}>\n                            x\n                        </span>\n                        </li>\n                    );\n                    })}\n                </div>\n                </div>\n              <Link to=\"/boards\">Back</Link>\n            </div>\n          </div>\n\n        );\n    }\n\n\n}\n\n\n\n\n\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}