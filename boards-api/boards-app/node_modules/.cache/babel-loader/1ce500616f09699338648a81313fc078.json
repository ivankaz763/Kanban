{"ast":null,"code":"var _jsxFileName = \"/Users/Ivan/Desktop/test4/boards-api/boards-app/src/components/Board.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport update from \"immutability-helper\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Board extends Component {\n  constructor(props) {\n    super(props);\n\n    this.reloadColumns = () => {\n      this.setState({\n        columns: []\n      });\n      this.loadColumns();\n    };\n\n    this.removeColumn = (board_id, id) => {\n      axios.delete(`/api/v1/boards/${board_id}/board_columns/${id}`).then(res => {\n        const columnIndex = this.state.columns.findIndex(x => x.id === id);\n        const columns = update(this.state.columns, {\n          $splice: [[columnIndex, 1]]\n        });\n        this.setState({\n          columns: columns\n        });\n      }).catch(error => console.log(error));\n    };\n\n    this.state = {\n      columns: [],\n      cards: []\n    };\n  }\n\n  loadColumns() {\n    axios.get(`/api/v1/boards/6/board_columns`).then(res => {\n      this.setState({\n        columns: res.data\n      });\n    });\n    axios.get(`/api/v1/boards/6/cards`).then(res => {\n      this.setState({\n        cards: res.data\n      });\n    }).catch(error => console.log(error));\n  }\n\n  componentDidMount() {\n    this.loadColumns();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"topHeading\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Boards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrapItems\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"listItems\",\n            children: this.state.columns.map(column => {\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"item\",\n                column: column,\n                children: [/*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/boards\",\n                  children: column.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"itemDisplay\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"removeItemButton\",\n                  onClick: e => this.removeColumn(6, 9),\n                  children: \"x\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 25\n                }, this)]\n              }, column.board_id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 25\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"listItems\",\n            children: this.state.cards.map(card => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item\",\n                card: card,\n                children: [/*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/boards\",\n                  children: card.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"itemDisplay\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 25\n                }, this)]\n              }, card.board_column_id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 25\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/boards\",\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/Ivan/Desktop/test4/boards-api/boards-app/src/components/Board.js"],"names":["React","Component","axios","update","Link","Board","constructor","props","reloadColumns","setState","columns","loadColumns","removeColumn","board_id","id","delete","then","res","columnIndex","state","findIndex","x","$splice","catch","error","console","log","cards","get","data","componentDidMount","render","map","column","title","e","card","board_column_id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport update from \"immutability-helper\";\nimport { Link } from \"react-router-dom\";\n\nclass Board extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          columns: [],\n          cards: []\n        };\n    }\n\n    loadColumns() {\n        axios\n          .get(`/api/v1/boards/6/board_columns`)\n          .then((res) => {\n            this.setState({ columns: res.data });\n          })\n        axios\n          .get(`/api/v1/boards/6/cards`)\n          .then((res) => {\n            this.setState({ cards: res.data });\n          })\n        .catch((error) => console.log(error));\n    }\n\n    reloadColumns = () => {\n        this.setState({ columns: [] });\n        this.loadColumns();\n      };\n\n    removeColumn = (board_id, id) => {\n        axios \n            .delete(`/api/v1/boards/${board_id}/board_columns/${id}`)\n            .then((res) => {\n                const columnIndex = this.state.columns.findIndex((x) => x.id === id);\n                const columns = update(this.state.columns, {\n                  $splice: [[columnIndex, 1]],\n                });\n                this.setState({\n                    columns: columns,\n                });\n              })\n              .catch((error) => console.log(error));\n    };\n\n    componentDidMount() {\n        this.loadColumns();\n    }\n\n    render() {\n        return (\n            <div className=\"mainContainer\">\n            <div className=\"topHeading\">\n              <h1>Boards</h1>\n              <div className=\"wrapItems\">\n                <div className=\"listItems\">\n                    {this.state.columns.map((column) => {\n                    return (\n                        <li className=\"item\" column={column} key={column.board_id}>\n                        <Link to=\"/boards\">{column.title}</Link>\n                        <label className=\"itemDisplay\"></label>\n                        <span className=\"removeItemButton\" onClick={(e) => this.removeColumn(6,9)}>\n                            x\n                        </span>\n                        </li>\n                    );\n                    })}\n                </div>\n                <div className=\"listItems\">\n                    {this.state.cards.map((card) => {\n                    return (\n                        <div className=\"item\" card={card} key={card.board_column_id}>\n                        <Link to=\"/boards\">{card.title}</Link>\n                        <label className=\"itemDisplay\"></label>\n                        </div>\n                    );\n                    })}\n                </div>\n                </div>\n              <Link to=\"/boards\">Back</Link>\n            </div>\n          </div>\n        );\n    }\n\n\n}\n\n\n\n\n\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}