{"ast":null,"code":"var _jsxFileName = \"/Users/Ivan/Desktop/test4/boards-api/boards-app/src/components/Column.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport update from \"immutability-helper\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\nimport EdiText from 'react-editext';\n\nclass Board extends Component {\n  constructor(props) {\n    super(props);\n\n    this.reloadColumns = () => {\n      this.setState({\n        columns: [],\n        cards: [],\n        board: null\n      });\n      this.loadColumns();\n    };\n\n    this.newColumn = (e, id) => {\n      if (e.key === \"Enter\" && !(e.target.value === \"\")) {\n        axios.post(`/api/v1/board_columns`, {\n          board_column: {\n            title: e.target.value,\n            board_id: id\n          }\n        }).then(res => {\n          this.reloadColumns();\n          this.setState({\n            inputValue: \"\"\n          });\n        }).catch(error => console.log(error));\n      }\n    };\n\n    this.newCard = (e, column_id, id) => {\n      if (e.key === \"Enter\" && !(e.target.value === \"\")) {\n        axios.post(`/api/v1/cards`, {\n          card: {\n            title: e.target.value,\n            board_column_id: column_id,\n            board_id: id\n          }\n        }).then(res => {\n          this.reloadColumns();\n          this.setState({\n            inputValue: \"\"\n          });\n        }).catch(error => console.log(error));\n      }\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        inputValue: e.target.value\n      });\n    };\n\n    this.removeColumn = id => {\n      axios.delete(`/api/v1/board_columns/${id}`).then(res => {\n        const columnIndex = this.state.columns.findIndex(x => x.id === id);\n        const columns = update(this.state.columns, {\n          $splice: [[columnIndex, 1]]\n        });\n        this.setState({\n          columns: columns\n        });\n        this.reloadColumns();\n      }).catch(error => console.log(error));\n    };\n\n    this.removeCard = id => {\n      axios.delete(`/api/v1/cards/${id}`).then(res => {\n        this.reloadColumns();\n      }).catch(error => console.log(error));\n    };\n\n    this.modifyCard = (value, card_id) => {\n      if (!(value === \"\")) {\n        axios.put(`/api/v1/cards/${card_id}`, {\n          card: {\n            title: value\n          }\n        }).then(res => {\n          this.reloadColumns();\n        }).catch(error => console.log(error));\n      }\n    };\n\n    this.state = {\n      columns: [],\n      cards: [],\n      board: null\n    };\n  }\n\n  loadColumns() {\n    const link = this.props.match.params.link;\n    axios.get(`/api/v1/board/${link}`).then(res => {\n      this.setState({\n        board: res.data\n      });\n      axios.get(`/api/v1/board_columns`, {\n        params: {\n          board_id: res.data.id\n        }\n      }).then(res => {\n        this.setState({\n          columns: res.data\n        });\n        res.data.forEach(column => {\n          axios.get(`/api/v1/cards`, {\n            params: {\n              board_column_id: column.id\n            }\n          }).then(res => {\n            const newCards = this.state.cards.concat(res.data);\n            this.setState({\n              cards: newCards\n            });\n          });\n        });\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.loadColumns();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"taskContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"newColumn\",\n      type: \"text\",\n      placeholder: \"Input a New Column and Press Enter\",\n      maxLength: \"75\",\n      onKeyPress: event => this.newColumn(event, this.state.board.id),\n      value: this.state.inputValue,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }, this.state.columns.map(column => {\n      const Cards = this.state.cards.filter(card => card.board_column_id === column.id);\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"ul\", {\n        class: \"board-col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        class: \"board-col-name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 19\n        }\n      }, column.title, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"removeItemButton\",\n        onClick: e => this.removeColumn(column.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }\n      }, \"x\")), Cards.map(card => {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"li\", {\n          class: \"board-col-item\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(EdiText, {\n          showButtonsOnHover: true,\n          submitOnEnter: true,\n          cancelOnEscape: true,\n          editOnViewClick: true,\n          type: \"text\",\n          value: card.title,\n          onSave: event => this.modifyCard(event, card.id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"removeItemButton\",\n          onClick: e => this.removeCard(card.id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }\n        }, \"x\")));\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        className: \"newCard\",\n        type: \"text\",\n        placeholder: \"New Card\",\n        maxLength: \"75\",\n        onKeyPress: event => this.newCard(event, column.id),\n        value: this.state.inputValue,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 19\n        }\n      })));\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/boards\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 15\n      }\n    }, \"Back\")));\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/Ivan/Desktop/test4/boards-api/boards-app/src/components/Column.js"],"names":["React","Component","axios","update","Link","useParams","withRouter","EdiText","Board","constructor","props","reloadColumns","setState","columns","cards","board","loadColumns","newColumn","e","id","key","target","value","post","board_column","title","board_id","then","res","inputValue","catch","error","console","log","newCard","column_id","card","board_column_id","handleChange","removeColumn","delete","columnIndex","state","findIndex","x","$splice","removeCard","modifyCard","card_id","put","link","match","params","get","data","forEach","column","newCards","concat","componentDidMount","render","event","map","Cards","filter"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport update from \"immutability-helper\";\nimport { Link, useParams} from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\nimport EdiText from 'react-editext'\n\n\nclass Board extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          columns: [],\n          cards: [],\n          board: null\n        };\n    }\n\n    loadColumns() {\n        const link = this.props.match.params.link;\n        axios \n          .get(`/api/v1/board/${link}`)\n          .then((res) => {\n            this.setState({ board: res.data });\n            axios\n            .get(`/api/v1/board_columns`, { params: {board_id: res.data.id} })\n            .then((res) => {\n              this.setState({ columns: res.data });\n              res.data.forEach((column) => {\n                axios\n                .get(`/api/v1/cards`, { params: {board_column_id: column.id} })\n                .then((res) => {\n                    const newCards = this.state.cards.concat(res.data)\n                    this.setState({cards: newCards})\n                  })\n                })\n              })\n            })\n    }\n\n    reloadColumns = () => {\n        this.setState({ columns: [], cards: [], board: null });\n        this.loadColumns();\n      };\n    \n    newColumn = (e, id) => {\n        if (e.key === \"Enter\" && !(e.target.value === \"\")) {\n            axios\n              .post(`/api/v1/board_columns`, { board_column: { title: e.target.value, board_id: id} })\n              .then((res) => {\n                this.reloadColumns();\n        \n                this.setState({\n                  inputValue: \"\",\n                });\n              })\n              .catch((error) => console.log(error));\n            }\n    };\n\n    newCard = (e, column_id, id) => {\n        if (e.key === \"Enter\" && !(e.target.value === \"\")) {\n            axios\n              .post(`/api/v1/cards`, { card: { title: e.target.value, board_column_id: column_id, board_id: id} })\n              .then((res) => {\n                this.reloadColumns();\n        \n                this.setState({\n                  inputValue: \"\",\n                });\n              })\n              .catch((error) => console.log(error));\n            }\n    };\n\n    handleChange = (e) => {\n\t\tthis.setState({inputValue: e.target.value});\n\t  }\n\n\n    removeColumn = ( id ) => {\n        axios \n            .delete(`/api/v1/board_columns/${id}`)\n            .then((res) => {\n                const columnIndex = this.state.columns.findIndex((x) => x.id === id);\n                const columns = update(this.state.columns, {\n                  $splice: [[columnIndex, 1]],\n                });\n                this.setState({\n                    columns: columns,\n                });\n                this.reloadColumns();\n                \n              })\n              .catch((error) => console.log(error));\n    };\n\n    removeCard = ( id ) => {\n        axios\n            .delete(`/api/v1/cards/${id}`)\n            .then((res) => {\n                this.reloadColumns();\n              })\n              .catch((error) => console.log(error));\n    };\n\n\n    componentDidMount() {\n        this.loadColumns();\n    }\n\n\n    modifyCard= (value, card_id) => {\n        if (!(value === \"\")) {\n            axios\n                .put(`/api/v1/cards/${card_id}`, { card: { title: value} })\n                .then((res) => {\n                    this.reloadColumns();\n                })\n                .catch((error) => console.log(error));\n        }\n    };\n\n    render() {\n        return (\n          <>\n          <div className=\"taskContainer\">\n            <input\n              className=\"newColumn\"\n              type=\"text\"\n              placeholder=\"Input a New Column and Press Enter\"\n              maxLength=\"75\"\n              onKeyPress={(event) => this.newColumn(event, this.state.board.id)}\n              value={this.state.inputValue}\n              onChange={this.handleChange}\n            />\n          </div>\n            <div class=\"board\">  \n            {this.state.columns.map((column) => {\n              const Cards = this.state.cards.filter((card) => card.board_column_id === column.id);\n              return <>\n                <ul class=\"board-col\">\n                  <li class=\"board-col-name\">\n                    {column.title}\n                    <span className=\"removeItemButton\" onClick={(e) => this.removeColumn(column.id)}>x</span>\n                  </li>\n                  {Cards.map((card) => {\n                    return <>\n                      <li class=\"board-col-item\">\n                        <EdiText\n                            showButtonsOnHover\n                            submitOnEnter\n                            cancelOnEscape\n                            editOnViewClick={true}\n                            type='text'\n                            value={card.title}\n                            onSave={(event) => this.modifyCard(event, card.id)}\n                        />\n                        <span className=\"removeItemButton\" onClick={(e) => this.removeCard(card.id)}>x</span>\n                      </li>\n                      \n                    </>;\n                  })}\n                  <input\n                            className=\"newCard\"\n                            type=\"text\"\n                            placeholder=\"New Card\"\n                            maxLength=\"75\"\n                            onKeyPress={(event) => this.newCard(event, column.id)}\n                            value={this.state.inputValue}\n                            onChange={this.handleChange}\n                        />\n                </ul>\n              </>;\n            })}\n          </div>\n          <div>\n              <Link to=\"/boards\">Back</Link>\n          </div></>\n        );\n    }\n\n\n}\n\n\n\n\n\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}