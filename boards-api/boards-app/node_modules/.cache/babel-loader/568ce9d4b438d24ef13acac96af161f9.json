{"ast":null,"code":"var _jsxFileName = \"/Users/Ivan/Desktop/test4/boards-api/boards-app/src/components/Column.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport update from \"immutability-helper\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\nimport EdiText from 'react-editext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Boardd extends Component {\n  constructor(props) {\n    super(props);\n\n    this.reloadCards = () => {\n      this.setState({\n        cards: []\n      });\n      this.loadColumns();\n    };\n\n    this.reloadColumns = () => {\n      this.setState({\n        columns: []\n      });\n      this.loadColumns();\n    };\n\n    this.newColumn = (e, id) => {\n      if (e.key === \"Enter\" && !(e.target.value === \"\")) {\n        axios.post(`/api/v1/board_columns`, {\n          board_column: {\n            title: e.target.value,\n            board_id: id\n          }\n        }).then(res => {\n          this.reloadColumns();\n          this.setState({\n            inputValue: \"\"\n          });\n        }).catch(error => console.log(error));\n      }\n    };\n\n    this.newCard = (e, column_id, id) => {\n      if (e.key === \"Enter\" && !(e.target.value === \"\")) {\n        axios.post(`/api/v1/cards`, {\n          card: {\n            title: e.target.value,\n            board_column_id: column_id,\n            board_id: id\n          }\n        }).then(res => {\n          this.reloadCards();\n          this.setState({\n            inputValue: \"\"\n          });\n        }).catch(error => console.log(error));\n      }\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        inputValue: e.target.value\n      });\n    };\n\n    this.removeColumn = id => {\n      axios.delete(`/api/v1/board_columns/${id}`).then(res => {\n        const columnIndex = this.state.columns.findIndex(x => x.id === id);\n        const columns = update(this.state.columns, {\n          $splice: [[columnIndex, 1]]\n        });\n        this.setState({\n          columns: columns\n        });\n        this.reloadCards();\n      }).catch(error => console.log(error));\n    };\n\n    this.removeCard = id => {\n      axios.delete(`/api/v1/cards/${id}`).then(res => {\n        this.reloadCards();\n      }).catch(error => console.log(error));\n    };\n\n    this.modifyCard = (value, card_id) => {\n      // debugger;\n      if (!(value === \"\")) {\n        axios.put(`/api/v1/cards/${card_id}`, {\n          card: {\n            title: value\n          }\n        }).then(res => {\n          this.reloadCards();\n        }).catch(error => console.log(error));\n      }\n    };\n\n    this.state = {\n      columns: [],\n      cards: [],\n      board: null\n    };\n  }\n\n  loadColumns() {\n    const id = this.props.match.params.id;\n    axios.get(`/api/v1/board_columns`, {\n      params: {\n        board_id: id\n      }\n    }).then(res => {\n      this.setState({\n        columns: res.data\n      });\n    });\n    axios.get(`/api/v1/cards`, {\n      params: {\n        board_id: id\n      }\n    }).then(res => {\n      this.setState({\n        cards: res.data\n      });\n    }).catch(error => console.log(error));\n    axios.get(`/api/v1/boards/${id}`).then(res => {\n      this.setState({\n        board: res.data\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.loadColumns();\n  }\n\n  render() {\n    const id = this.props.match.params.id;\n    return;\n\n    /*#__PURE__*/\n    _jsxDEV(\"div\", {\n      className: \"board\",\n      children: this.state.columns.map(column => {\n        return /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"board-col\",\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"board-col-name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Boardd;","map":{"version":3,"sources":["/Users/Ivan/Desktop/test4/boards-api/boards-app/src/components/Column.js"],"names":["React","Component","axios","update","Link","useParams","withRouter","EdiText","Boardd","constructor","props","reloadCards","setState","cards","loadColumns","reloadColumns","columns","newColumn","e","id","key","target","value","post","board_column","title","board_id","then","res","inputValue","catch","error","console","log","newCard","column_id","card","board_column_id","handleChange","removeColumn","delete","columnIndex","state","findIndex","x","$splice","removeCard","modifyCard","card_id","put","board","match","params","get","data","componentDidMount","render","map","column"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport update from \"immutability-helper\";\nimport { Link, useParams} from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\nimport EdiText from 'react-editext'\n\nclass Boardd extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          columns: [],\n          cards: [],\n          board: null\n        };\n    }\n\n    loadColumns() {\n        const id = this.props.match.params.id;\n        axios\n          .get(`/api/v1/board_columns`, { params: {board_id: id} })\n          .then((res) => {\n            this.setState({ columns: res.data });\n          })\n        axios\n          .get(`/api/v1/cards`, { params: {board_id: id} })\n          .then((res) => {\n            this.setState({ cards: res.data });\n          })\n        .catch((error) => console.log(error));\n        axios \n          .get(`/api/v1/boards/${id}`)\n          .then((res) => {\n            this.setState({ board: res.data });\n          })\n    }\n\n    reloadCards = () => {\n        this.setState({ cards: [] });\n        this.loadColumns();\n      };\n\n    reloadColumns = () => {\n        this.setState({ columns: [] });\n        this.loadColumns();\n      };\n    \n    newColumn = (e, id) => {\n        if (e.key === \"Enter\" && !(e.target.value === \"\")) {\n            axios\n              .post(`/api/v1/board_columns`, { board_column: { title: e.target.value, board_id: id} })\n              .then((res) => {\n                this.reloadColumns();\n        \n                this.setState({\n                  inputValue: \"\",\n                });\n              })\n              .catch((error) => console.log(error));\n            }\n    };\n\n    newCard = (e, column_id, id) => {\n        if (e.key === \"Enter\" && !(e.target.value === \"\")) {\n            axios\n              .post(`/api/v1/cards`, { card: { title: e.target.value, board_column_id: column_id, board_id: id} })\n              .then((res) => {\n                this.reloadCards();\n        \n                this.setState({\n                  inputValue: \"\",\n                });\n              })\n              .catch((error) => console.log(error));\n            }\n    };\n\n    handleChange = (e) => {\n\t\tthis.setState({inputValue: e.target.value});\n\t  }\n\n\n    removeColumn = ( id ) => {\n        axios \n            .delete(`/api/v1/board_columns/${id}`)\n            .then((res) => {\n                const columnIndex = this.state.columns.findIndex((x) => x.id === id);\n                const columns = update(this.state.columns, {\n                  $splice: [[columnIndex, 1]],\n                });\n                this.setState({\n                    columns: columns,\n                });\n                this.reloadCards();\n                \n              })\n              .catch((error) => console.log(error));\n    };\n\n    removeCard = ( id ) => {\n        axios\n            .delete(`/api/v1/cards/${id}`)\n            .then((res) => {\n                this.reloadCards();\n              })\n              .catch((error) => console.log(error));\n    };\n\n\n    componentDidMount() {\n        this.loadColumns();\n    }\n\n\n    modifyCard= (value, card_id) => {\n        // debugger;\n        if (!(value === \"\")) {\n            axios\n                .put(`/api/v1/cards/${card_id}`, { card: { title: value} })\n                .then((res) => {\n                    this.reloadCards();\n                })\n                .catch((error) => console.log(error));\n        }\n    };\n\n    render() {\n        const id = this.props.match.params.id;\n        return\n        (\n            <div className=\"board\">\n                {this.state.columns.map((column) => {\n                    return (\n                        <ul className=\"board-col\">\n                            <li className=\"board-col-name\">\n\n                            </li>\n                        </ul>\n\n                    );\n                    })}\n\n            \n                \n            </div>\n        )\n    }\n\n\n}\n\n\n\n\n\n\nexport default Boardd;"]},"metadata":{},"sourceType":"module"}