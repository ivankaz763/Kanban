{"ast":null,"code":"var _jsxFileName = \"/Users/Ivan/\\u0440\\u0430\\u0431\\u043E\\u0438\\u0447\\u0438\\u0306 \\u0441\\u0442\\u043E\\u043B/test4/boards-api/boards-app/src/components/BoardsContainer.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport update from \"immutability-helper\";\nimport { TextInput } from \"./TextInput\";\nimport { Link } from \"react-router-dom\";\nimport { BoardsList } from \"./BoardsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass BoardsContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.newBoard = e => {\n      if (e.key === \"Enter\" && !(e.target.value === \"\")) {\n        axios.post(\"/api/v1/boards\", {\n          board: {\n            title: e.target.value\n          }\n        }).then(res => {\n          const boards = update(this.state.boards, {\n            $splice: [[0, 0, res.data]]\n          });\n          this.setState({\n            boards: boards,\n            inputValue: \"\"\n          });\n        }).catch(error => console.log(error));\n      }\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        inputValue: e.target.value\n      });\n    };\n\n    this.removeBoard = id => {\n      axios.delete(`/api/v1/boards/${id}`).then(res => {\n        const boardIndex = this.state.boards.findIndex(x => x.id === id);\n        const boards = update(this.state.boards, {\n          $splice: [[boardIndex, 1]]\n        });\n        this.setState({\n          boards: boards\n        });\n      }).catch(error => console.log(error));\n    };\n\n    this.state = {\n      boards: []\n    };\n  }\n\n  loadBoards() {\n    axios.get(\"/api/v1/boards\").then(res => {\n      this.setState({\n        boards: res.data\n      });\n    }).catch(error => console.log(error));\n  }\n\n  componentDidMount() {\n    this.loadBoards();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(BoardList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }, this);\n  }\n\n}\n\nexport default BoardsContainer;","map":{"version":3,"sources":["/Users/Ivan/рабоичй стол/test4/boards-api/boards-app/src/components/BoardsContainer.js"],"names":["React","Component","axios","update","TextInput","Link","BoardsList","BoardsContainer","constructor","props","newBoard","e","key","target","value","post","board","title","then","res","boards","state","$splice","data","setState","inputValue","catch","error","console","log","handleChange","removeBoard","id","delete","boardIndex","findIndex","x","loadBoards","get","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAAQC,UAAR,QAAyB,cAAzB;;;AAEA,MAAMC,eAAN,SAA8BN,SAA9B,CAAwC;AACpCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAgBnBC,QAhBmB,GAgBPC,CAAD,IAAO;AACd,UAAIA,CAAC,CAACC,GAAF,KAAU,OAAV,IAAqB,EAAED,CAAC,CAACE,MAAF,CAASC,KAAT,KAAmB,EAArB,CAAzB,EAAmD;AACjDZ,QAAAA,KAAK,CACFa,IADH,CACQ,gBADR,EAC0B;AAAEC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAEN,CAAC,CAACE,MAAF,CAASC;AAAlB;AAAT,SAD1B,EAEGI,IAFH,CAESC,GAAD,IAAS;AACb,gBAAMC,MAAM,GAAGjB,MAAM,CAAC,KAAKkB,KAAL,CAAWD,MAAZ,EAAoB;AACvCE,YAAAA,OAAO,EAAE,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAOH,GAAG,CAACI,IAAX,CAAD;AAD8B,WAApB,CAArB;AAIA,eAAKC,QAAL,CAAc;AACZJ,YAAAA,MAAM,EAAEA,MADI;AAEZK,YAAAA,UAAU,EAAE;AAFA,WAAd;AAID,SAXH,EAYGC,KAZH,CAYUC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAZpB;AAaD;AACF,KAhCgB;;AAAA,SAkCjBG,YAlCiB,GAkCDnB,CAAD,IAAO;AAC1B,WAAKa,QAAL,CAAc;AAACC,QAAAA,UAAU,EAAEd,CAAC,CAACE,MAAF,CAASC;AAAtB,OAAd;AACE,KApCmB;;AAAA,SAsCnBiB,WAtCmB,GAsCJC,EAAD,IAAQ;AACpB9B,MAAAA,KAAK,CACF+B,MADH,CACW,kBAAiBD,EAAG,EAD/B,EAEGd,IAFH,CAESC,GAAD,IAAS;AACb,cAAMe,UAAU,GAAG,KAAKb,KAAL,CAAWD,MAAX,CAAkBe,SAAlB,CAA6BC,CAAD,IAAOA,CAAC,CAACJ,EAAF,KAASA,EAA5C,CAAnB;AACA,cAAMZ,MAAM,GAAGjB,MAAM,CAAC,KAAKkB,KAAL,CAAWD,MAAZ,EAAoB;AACvCE,UAAAA,OAAO,EAAE,CAAC,CAACY,UAAD,EAAa,CAAb,CAAD;AAD8B,SAApB,CAArB;AAGA,aAAKV,QAAL,CAAc;AACVJ,UAAAA,MAAM,EAAEA;AADE,SAAd;AAGD,OAVH,EAWGM,KAXH,CAWUC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAXpB;AAYD,KAnDkB;;AAEf,SAAKN,KAAL,GAAa;AACXD,MAAAA,MAAM,EAAE;AADG,KAAb;AAGH;;AAEDiB,EAAAA,UAAU,GAAG;AACTnC,IAAAA,KAAK,CACFoC,GADH,CACO,gBADP,EAEGpB,IAFH,CAESC,GAAD,IAAS;AACb,WAAKK,QAAL,CAAc;AAAEJ,QAAAA,MAAM,EAAED,GAAG,CAACI;AAAd,OAAd;AACD,KAJH,EAKGG,KALH,CAKUC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CALpB;AAMH;;AAuCDY,EAAAA,iBAAiB,GAAG;AAChB,SAAKF,UAAL;AACH;;AAEGG,EAAAA,MAAM,GAAG;AACL,wBACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YADF;AAIH;;AA/D+B;;AAkExC,eAAejC,eAAf","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport update from \"immutability-helper\";\nimport { TextInput } from \"./TextInput\";\nimport { Link } from \"react-router-dom\";\nimport {BoardsList} from \"./BoardsList\";\n\nclass BoardsContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          boards: [],\n        };\n    }\n\n    loadBoards() {\n        axios\n          .get(\"/api/v1/boards\")\n          .then((res) => {\n            this.setState({ boards: res.data });\n          })\n          .catch((error) => console.log(error));\n    }\n\n    newBoard = (e) => {\n        if (e.key === \"Enter\" && !(e.target.value === \"\")) {\n          axios\n            .post(\"/api/v1/boards\", { board: { title: e.target.value } })\n            .then((res) => {\n              const boards = update(this.state.boards, {\n                $splice: [[0, 0, res.data]],\n              });\n      \n              this.setState({\n                boards: boards,\n                inputValue: \"\",\n              });\n            })\n            .catch((error) => console.log(error));\n        }\n      };\n\n      handleChange = (e) => {\n\t\tthis.setState({inputValue: e.target.value});\n\t  }\n\n    removeBoard = (id) => {\n      axios\n        .delete(`/api/v1/boards/${id}`)\n        .then((res) => {\n          const boardIndex = this.state.boards.findIndex((x) => x.id === id);\n          const boards = update(this.state.boards, {\n            $splice: [[boardIndex, 1]],\n          });\n          this.setState({\n              boards: boards,\n          });\n        })\n        .catch((error) => console.log(error));\n    };\n\n    componentDidMount() {\n        this.loadBoards();\n    }\n\n        render() {\n            return (\n              <BoardList/>\n\n            );\n        }\n}\n\nexport default BoardsContainer;"]},"metadata":{},"sourceType":"module"}